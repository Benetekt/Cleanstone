package rocks.cleanstone.game.material.block.vanilla;

import rocks.cleanstone.game.block.state.property.Property;
import rocks.cleanstone.game.block.state.property.type.PropertyBoolean;
import rocks.cleanstone.game.block.state.property.type.PropertyEnum;
import rocks.cleanstone.game.block.state.property.type.PropertyInteger;
import rocks.cleanstone.game.block.state.property.vanilla.*;

public class VanillaBlockProperties {
    public static final Property SNOWY = new PropertyBoolean("snowy", false);
    public static final Property STAGE = new PropertyInteger("stage", 0, 1, 0);
    public static final Property LEVEL = new PropertyInteger("level", 0, 3, 0);
    public static final Property AXIS = new PropertyEnum<>("axis", Axis.Y);
    public static final Property DISTANCE = new PropertyInteger("distance", 1, 7, 7);
    public static final Property PERSISTENT = new PropertyBoolean("persistent", false);
    public static final Property FACING = new PropertyEnum<>("facing", Facing.NORTH);
    public static final Property TRIGGERED = new PropertyBoolean("triggered", false);
    public static final Property INSTRUMENT = new PropertyEnum<>("instrument", Instrument.HARP);
    public static final Property NOTE = new PropertyInteger("note", 0, 24, 0);
    public static final Property POWERED = new PropertyBoolean("powered", false);
    public static final Property OCCUPIED = new PropertyBoolean("occupied", false);
    public static final Property PART = new PropertyEnum<>("part", BedPart.FOOT);
    public static final Property SHAPE = new PropertyEnum<>("shape", StairShape.STRAIGHT);
    public static final Property EXTENDED = new PropertyBoolean("extended", false);
    public static final Property HALF = new PropertyEnum<>("half", StairHalf.BOTTOM);
    public static final Property SHORT = new PropertyBoolean("short", false);
    public static final Property TYPE = new PropertyEnum<>("type", HalfBlockPosition.BOTTOM);
    public static final Property AGE = new PropertyInteger("age", 0, 25, 0);
    public static final Property EAST = new PropertyBoolean("east", false);
    public static final Property NORTH = new PropertyBoolean("north", false);
    public static final Property SOUTH = new PropertyBoolean("south", false);
    public static final Property UP = new PropertyBoolean("up", false);
    public static final Property WEST = new PropertyBoolean("west", false);
    public static final Property WATERLOGGED = new PropertyBoolean("waterlogged", true);
    public static final Property POWER = new PropertyInteger("power", 0, 15, 0);
    public static final Property MOISTURE = new PropertyInteger("moisture", 0, 7, 0);
    public static final Property LIT = new PropertyBoolean("lit", false);
    public static final Property ROTATION = new PropertyInteger("rotation", 0, 15, 0);
    public static final Property HINGE = new PropertyEnum<>("hinge", HingePosition.LEFT);
    public static final Property OPEN = new PropertyBoolean("open", false);
    public static final Property FACE = new PropertyEnum<>("face", Face.WALL);
    public static final Property LAYERS = new PropertyInteger("layers", 1, 8, 1);
    public static final Property HAS_RECORD = new PropertyBoolean("has_record", false);
    public static final Property BITES = new PropertyInteger("bites", 0, 6, 0);
    public static final Property DELAY = new PropertyInteger("delay", 1, 4, 1);
    public static final Property LOCKED = new PropertyBoolean("locked", false);
    public static final Property DOWN = new PropertyBoolean("down", false);
    public static final Property IN_WALL = new PropertyBoolean("in_wall", false);
    public static final Property HAS_BOTTLE = new PropertyBoolean("has_bottle_2", false);
    public static final Property EYE = new PropertyBoolean("eye", false);
    public static final Property ATTACHED = new PropertyBoolean("attached", false);
    public static final Property DISARMED = new PropertyBoolean("disarmed", false);
    public static final Property CONDITIONAL = new PropertyBoolean("conditional", false);
    public static final Property MODE = new PropertyEnum<>("mode", StructureBlockMode.SAVE);
    public static final Property INVERTED = new PropertyBoolean("inverted", false);
    public static final Property ENABLED = new PropertyBoolean("enabled", true);
    public static final Property EGGS = new PropertyInteger("eggs", 1, 4, 1);
    public static final Property HATCH = new PropertyInteger("hatch", 0, 2, 0);
    public static final Property PICKLES = new PropertyInteger("pickles", 1, 4, 1);
    public static final Property DRAG = new PropertyBoolean("drag", true);
}
